@page "/orders"
@using Dashboard.Blazor.ViewModels
@inject HttpClient client

<PageTitle>Orders</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Orders</MudText>
<MudText Class="mb-8">This component demonstrates fetching data from the server.</MudText>
@if (_orderViews == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="_orderViews" Hover="true" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Organization Name</MudTh>
            <MudTh>User Name</MudTh>
            <MudTh>Status</MudTh>
            <MudTh>Create Date</MudTh>
            <MudTh>Last Date</MudTh>
            <MudTh>Order Product</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Organization Id">@context.OrganizationId</MudTd>
            <MudTd DataLabel="User Id">@context.UserId</MudTd>
            <MudTd DataLabel="Status">@context.Status</MudTd>
            <MudTd DataLabel="Create Data">@context.CreateDate</MudTd>
            <MudTd DataLabel="Last Data">@context.LastUpdate</MudTd>
            <MudTd DataLabel="OrderProduct">@context.OrderProduct</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 50, 100 }"/>
        </PagerContent>
    </MudTable>
}
@code {
    private List<OrderView>? _orderViews;

    protected override async Task OnInitializedAsync()
    {
        _orderViews = await client.GetFromJsonAsync<List<OrderView>>("/api/Orders");
    }
}